From ad017007e377043df24ca491583baa85d33c6612 Mon Sep 17 00:00:00 2001
From: Guillermo Trinidad <gui.trini@gmail.com>
Date: Sun, 7 Dec 2014 15:35:15 -0200
Subject: [PATCH 2/2] Frame navigation through keyboard

Left-right keys should be used for clockwise navigation arround the
frame. The Enter/Return key is used for buttons which have clicked events.

Signed-off-by: Guillermo Trinidad <gui.trini@gmail.com>
Reviewed-by: Daniel Francis <francis@sugarlabs.org>
---
 extensions/deviceicon/audio.py     |    1 +
 src/jarabe/frame/activitiestray.py |    2 ++
 src/jarabe/frame/clipboardicon.py  |    1 +
 src/jarabe/frame/clipboardtray.py  |    6 +++++-
 src/jarabe/frame/devicestray.py    |    4 +++-
 src/jarabe/frame/frame.py          |   30 +++++++++++++++++++++---------
 src/jarabe/frame/navigable.py      |   14 ++++++++++----
 7 files changed, 43 insertions(+), 15 deletions(-)

diff --git a/extensions/deviceicon/audio.py b/extensions/deviceicon/audio.py
index de7e0ec..8fb5c2d 100644
--- a/extensions/deviceicon/audio.py
+++ b/extensions/deviceicon/audio.py
@@ -73,6 +73,7 @@ class DeviceView(TrayIcon):
         palette = AudioPalette(device_label, output_label, input_label,
                                output_model=self._audio_output_model,
                                input_model=self._audio_input_model)
+        self.set_palette(palette)
         palette.set_group_id('frame')
         return palette
 
diff --git a/src/jarabe/frame/activitiestray.py b/src/jarabe/frame/activitiestray.py
index 87f164d..6abb02b 100644
--- a/src/jarabe/frame/activitiestray.py
+++ b/src/jarabe/frame/activitiestray.py
@@ -383,6 +383,7 @@ class ActivitiesTray(HTray, Navigable):
         item = InviteButton(invite)
         item.connect('remove-invite', self.__remove_invite_cb, invite)
         self.add_item(item)
+        self.nav_queue.append(item)
         item.show()
         self._invite_to_item[invite] = item
 
@@ -401,6 +402,7 @@ class ActivitiesTray(HTray, Navigable):
             button = OutgoingTransferButton(file_transfer)
 
         self.add_item(button)
+        self.nav_queue.append(button)
         button.show()
 
 
diff --git a/src/jarabe/frame/clipboardicon.py b/src/jarabe/frame/clipboardicon.py
index 7e23a79..74ffc0f 100644
--- a/src/jarabe/frame/clipboardicon.py
+++ b/src/jarabe/frame/clipboardicon.py
@@ -67,6 +67,7 @@ class ClipboardIcon(RadioToolButton):
     def create_palette(self):
         palette = ClipboardMenu(self._cb_object)
         palette.set_group_id('frame')
+        self.set_palette(palette)
         return palette
 
     def get_object_id(self):
diff --git a/src/jarabe/frame/clipboardtray.py b/src/jarabe/frame/clipboardtray.py
index f22155d..e1a040b 100644
--- a/src/jarabe/frame/clipboardtray.py
+++ b/src/jarabe/frame/clipboardtray.py
@@ -24,6 +24,7 @@ from sugar3.graphics import style
 
 from jarabe.frame import clipboard
 from jarabe.frame.clipboardicon import ClipboardIcon
+from jarabe.frame.navigable import Navigable
 
 
 class _ContextMap(object):
@@ -56,12 +57,13 @@ class _ContextMap(object):
         return context in self._context_map
 
 
-class ClipboardTray(tray.VTray):
+class ClipboardTray(tray.VTray, Navigable):
 
     MAX_ITEMS = Gdk.Screen.height() / style.GRID_CELL_SIZE - 2
 
     def __init__(self):
         tray.VTray.__init__(self, align=tray.ALIGN_TO_END)
+        Navigable.__init__(self)
         self._icons = {}
         self._context_map = _ContextMap()
 
@@ -111,6 +113,7 @@ class ClipboardTray(tray.VTray):
 
         icon = ClipboardIcon(cb_object, group)
         self.add_item(icon)
+        self.nav_queue.append(icon)
         icon.show()
         self._icons[cb_object.get_id()] = icon
 
@@ -125,6 +128,7 @@ class ClipboardTray(tray.VTray):
     def _object_deleted_cb(self, cb_service, object_id):
         icon = self._icons[object_id]
         self.remove_item(icon)
+        del self.nav_queue[self.nav_queue.index(icon)]
         del self._icons[object_id]
         # select the last available icon
         if self._icons:
diff --git a/src/jarabe/frame/devicestray.py b/src/jarabe/frame/devicestray.py
index d89984f..a409de9 100644
--- a/src/jarabe/frame/devicestray.py
+++ b/src/jarabe/frame/devicestray.py
@@ -49,7 +49,9 @@ class DevicesTray(tray.HTray, Navigable):
             else:
                 break
         self.add_item(view, index=index)
-        self.nav_queue.append(view)
+        self.nav_queue.reverse()
+        self.nav_queue.insert(index, view)
+        self.nav_queue.reverse()
         view.show()
 
     def remove_device(self, view):
diff --git a/src/jarabe/frame/frame.py b/src/jarabe/frame/frame.py
index 1b7f360..43c7285 100644
--- a/src/jarabe/frame/frame.py
+++ b/src/jarabe/frame/frame.py
@@ -176,6 +176,7 @@ class Frame(object):
 
     def _create_left_panel(self):
         panel = ClipboardPanelWindow(self, Gtk.PositionType.LEFT)
+        self.navigation_queue.append(panel._clipboard_tray)
 
         return panel
 
@@ -227,27 +228,38 @@ class Frame(object):
 
     def notify_right_press(self):
         if self.visible:
-            if self.nav_action == 1 or self.nav_action == 2:
+            if self.nav_action == 1 or self.nav_action == 2 or \
+                    self.nav_action == -2:
                 self.navigation_position += 1
-                string = "" % ()
-                logging.debug(string)
                 if self.navigation_position == len(self.navigation_queue):
                     self.navigation_position = 0
                 self.nav_action = self.navigation_queue[
                     self.navigation_position].start_navigation()
-            self.nav_action = self.navigation_queue[
-                self.navigation_position].navigation_right()
+                if self.nav_action == -2:
+                    self.notify_right_press()
+            else:
+                self.nav_action = self.navigation_queue[
+                    self.navigation_position].navigation_right()
 
     def notify_left_press(self):
         if self.visible:
-            if self.nav_action == -1 or self.nav_action == 2:
+            logging.debug("Frame: %d %d" % (self.nav_action, self.navigation_position))
+            if self.nav_action == -1 or self.nav_action == 2 \
+                    or self.nav_action == -2:
                 self.navigation_position -= 1
                 if self.navigation_position == -1:
-                    self.navigation_position = len(self.navigation_queue)
+                    self.navigation_position = len(self.navigation_queue) - 1
                 self.nav_action = self.navigation_queue[
                     self.navigation_position].navigate_from_end()
-            self.nav_action = self.navigation_queue[
-                self.navigation_position].navigation_left()
+                if self.nav_action == -2:
+                    self.notify_left_press()
+            else:
+                self.nav_action = self.navigation_queue[
+                    self.navigation_position].navigation_left()
+
+    def notify_enter_press(self):
+        if self.visible:
+            self.navigation_queue[self.navigation_position].enter_key_pressed()
 
     def add_notification(self, icon, corner=Gtk.CornerType.TOP_LEFT,
                          duration=_NOTIFICATION_DURATION):
diff --git a/src/jarabe/frame/navigable.py b/src/jarabe/frame/navigable.py
index 32b78cd..d33c44f 100644
--- a/src/jarabe/frame/navigable.py
+++ b/src/jarabe/frame/navigable.py
@@ -12,18 +12,20 @@ class Navigable:
         return self.navigation_left()
 
     def navigate(self):
+        size = len(self.nav_queue) - 1
+        if size == -1:
+            return -2
         button = self.nav_queue[self.nav_pos]
         if button.get_palette() is None:
             button.create_palette()
         button.get_palette().popup()
-        size = len(self.nav_queue) - 1
         if size == 0:
             return 2
-        elif self.nav_pos == 0:
+        if self.nav_pos == 0:
             return -1
-        elif size > self.nav_pos:
+        if size > self.nav_pos:
             return 0
-        elif size == self.nav_pos:
+        if size == self.nav_pos:
             return 1
 
     def navigation_right(self):
@@ -33,3 +35,7 @@ class Navigable:
     def navigation_left(self):
         self.nav_pos -= 1
         return self.navigate()
+
+    def enter_key_pressed(self):
+        button = self.nav_queue[self.nav_pos]
+        button.get_child().clicked()
-- 
1.7.9.5

