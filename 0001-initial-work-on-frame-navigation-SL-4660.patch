From 698fc9dac15d565785ded8a14bdbb91a117b21f1 Mon Sep 17 00:00:00 2001
From: ceibal <ceibal@ceibal.(none)>
Date: Fri, 5 Dec 2014 19:51:57 -0200
Subject: [PATCH 1/2] initial work on frame navigation SL#4660

---
 src/jarabe/frame/Makefile.am       |    1 +
 src/jarabe/frame/activitiestray.py |    8 +++++++-
 src/jarabe/frame/devicestray.py    |    6 +++++-
 src/jarabe/frame/frame.py          |   36 +++++++++++++++++++++++++++++++++++-
 src/jarabe/frame/friendstray.py    |    8 +++++++-
 src/jarabe/frame/navigable.py      |   35 +++++++++++++++++++++++++++++++++++
 src/jarabe/frame/zoomtoolbar.py    |    6 +++++-
 src/jarabe/view/keyhandler.py      |    8 ++++++++
 8 files changed, 103 insertions(+), 5 deletions(-)
 create mode 100644 src/jarabe/frame/navigable.py

diff --git a/src/jarabe/frame/Makefile.am b/src/jarabe/frame/Makefile.am
index e5c445f..920ef21 100644
--- a/src/jarabe/frame/Makefile.am
+++ b/src/jarabe/frame/Makefile.am
@@ -13,6 +13,7 @@ sugar_PYTHON =				\
 	friendstray.py			\
 	eventarea.py			\
 	frame.py			\
+	navigable.py			\
 	notification.py			\
 	framewindow.py			\
 	zoomtoolbar.py
diff --git a/src/jarabe/frame/activitiestray.py b/src/jarabe/frame/activitiestray.py
index b9b206c..87f164d 100644
--- a/src/jarabe/frame/activitiestray.py
+++ b/src/jarabe/frame/activitiestray.py
@@ -50,6 +50,7 @@ from jarabe.model import filetransfer
 from jarabe.model import notifications
 from jarabe.view.palettes import JournalPalette, CurrentActivityPalette
 from jarabe.frame.frameinvoker import FrameWidgetInvoker
+from jarabe.frame.navigable import Navigable
 from jarabe.frame.notification import NotificationIcon
 from jarabe.frame.notification import NotificationButton
 from jarabe.frame.notification import NotificationPulsingIcon
@@ -233,9 +234,10 @@ class InvitePalette(Palette):
         self.emit('remove-invite')
 
 
-class ActivitiesTray(HTray):
+class ActivitiesTray(HTray, Navigable):
     def __init__(self):
         HTray.__init__(self)
+        Navigable.__init__(self)
 
         self._buttons = {}
         self._buttons_by_name = {}
@@ -281,6 +283,8 @@ class ActivitiesTray(HTray):
             button.show()
 
             self.add_item(button)
+            if button is not None:
+                self.nav_queue.append(button)
             self._buttons_by_name[name] = button
 
         if hasattr(button, 'show_badge'):
@@ -309,6 +313,7 @@ class ActivitiesTray(HTray):
 
         button = ActivityButton(home_activity, group)
         self.add_item(button)
+        self.nav_queue.append(button)
         self._buttons[home_activity] = button
         self._buttons_by_name[home_activity.get_activity_id()] = button
         button.connect('clicked', self.__activity_clicked_cb, home_activity)
@@ -318,6 +323,7 @@ class ActivitiesTray(HTray):
         logging.debug('__activity_removed_cb: %r', home_activity)
         button = self._buttons[home_activity]
         self.remove_item(button)
+        del self.nav_queue[self.nav_queue.index(button)]
         del self._buttons[home_activity]
         del self._buttons_by_name[home_activity.get_activity_id()]
 
diff --git a/src/jarabe/frame/devicestray.py b/src/jarabe/frame/devicestray.py
index f3bdbab..d89984f 100644
--- a/src/jarabe/frame/devicestray.py
+++ b/src/jarabe/frame/devicestray.py
@@ -20,11 +20,13 @@ import logging
 from sugar3.graphics import tray
 
 from jarabe import config
+from jarabe.frame.navigable import Navigable
 
 
-class DevicesTray(tray.HTray):
+class DevicesTray(tray.HTray, Navigable):
     def __init__(self):
         tray.HTray.__init__(self, align=tray.ALIGN_TO_END)
+        Navigable.__init__(self)
 
         for f in os.listdir(os.path.join(config.ext_path, 'deviceicon')):
             if f.endswith('.py') and not f.startswith('__'):
@@ -47,7 +49,9 @@ class DevicesTray(tray.HTray):
             else:
                 break
         self.add_item(view, index=index)
+        self.nav_queue.append(view)
         view.show()
 
     def remove_device(self, view):
         self.remove_item(view)
+        del self.nav_queue[self.nav_queue.index(view)]
diff --git a/src/jarabe/frame/frame.py b/src/jarabe/frame/frame.py
index 76d686f..1b7f360 100644
--- a/src/jarabe/frame/frame.py
+++ b/src/jarabe/frame/frame.py
@@ -71,6 +71,8 @@ class Frame(object):
 
         self._palette_group = palettegroup.get_group('frame')
 
+        self.navigation_queue = []
+        self.navigation_position = 0
         self._left_panel = None
         self._right_panel = None
         self._top_panel = None
@@ -84,9 +86,9 @@ class Frame(object):
         self._event_area.show()
 
         self._top_panel = self._create_top_panel()
+        self._right_panel = self._create_right_panel()
         self._bottom_panel = self._create_bottom_panel()
         self._left_panel = self._create_left_panel()
-        self._right_panel = self._create_right_panel()
 
         screen = Gdk.Screen.get_default()
         screen.connect('size-changed', self._size_changed_cb)
@@ -128,6 +130,10 @@ class Frame(object):
         self._animator.add(_Animation(self, 1.0))
         self._animator.start()
 
+        self.navigation_position = 0
+        self.nav_action = self.navigation_queue[
+            self.navigation_position].start_navigation()
+
     def move(self, pos):
         self.current_position = pos
         self._update_position()
@@ -139,10 +145,12 @@ class Frame(object):
         panel.append(zoom_toolbar, expand=False)
         zoom_toolbar.show()
         zoom_toolbar.connect('level-clicked', self._level_clicked_cb)
+        self.navigation_queue.append(zoom_toolbar)
 
         activities_tray = ActivitiesTray()
         panel.append(activities_tray)
         activities_tray.show()
+        self.navigation_queue.append(activities_tray)
 
         return panel
 
@@ -152,6 +160,7 @@ class Frame(object):
         devices_tray = DevicesTray()
         panel.append(devices_tray)
         devices_tray.show()
+        self.navigation_queue.append(devices_tray)
 
         return panel
 
@@ -161,6 +170,7 @@ class Frame(object):
         tray = FriendsTray()
         panel.append(tray)
         tray.show()
+        self.navigation_queue.append(tray)
 
         return panel
 
@@ -215,6 +225,30 @@ class Frame(object):
     def notify_key_press(self):
         self._key_listener.key_press()
 
+    def notify_right_press(self):
+        if self.visible:
+            if self.nav_action == 1 or self.nav_action == 2:
+                self.navigation_position += 1
+                string = "" % ()
+                logging.debug(string)
+                if self.navigation_position == len(self.navigation_queue):
+                    self.navigation_position = 0
+                self.nav_action = self.navigation_queue[
+                    self.navigation_position].start_navigation()
+            self.nav_action = self.navigation_queue[
+                self.navigation_position].navigation_right()
+
+    def notify_left_press(self):
+        if self.visible:
+            if self.nav_action == -1 or self.nav_action == 2:
+                self.navigation_position -= 1
+                if self.navigation_position == -1:
+                    self.navigation_position = len(self.navigation_queue)
+                self.nav_action = self.navigation_queue[
+                    self.navigation_position].navigate_from_end()
+            self.nav_action = self.navigation_queue[
+                self.navigation_position].navigation_left()
+
     def add_notification(self, icon, corner=Gtk.CornerType.TOP_LEFT,
                          duration=_NOTIFICATION_DURATION):
 
diff --git a/src/jarabe/frame/friendstray.py b/src/jarabe/frame/friendstray.py
index 099a3b6..13e45a5 100644
--- a/src/jarabe/frame/friendstray.py
+++ b/src/jarabe/frame/friendstray.py
@@ -22,6 +22,7 @@ from jarabe.view.buddymenu import BuddyMenu
 from jarabe.frame.frameinvoker import FrameWidgetInvoker
 from jarabe.model import shell
 from jarabe.model.buddy import get_owner_instance
+from jarabe.frame.navigable import Navigable
 from jarabe.model import neighborhood
 
 
@@ -39,12 +40,14 @@ class FriendIcon(TrayIcon):
         palette = BuddyMenu(self._buddy)
         palette.props.icon_visible = False
         palette.set_group_id('frame')
+        self.set_palette(palette)
         return palette
 
 
-class FriendsTray(VTray):
+class FriendsTray(VTray, Navigable):
     def __init__(self):
         VTray.__init__(self)
+        Navigable.__init__(self)
 
         self._shared_activity = None
         self._buddies = {}
@@ -61,6 +64,7 @@ class FriendsTray(VTray):
 
         icon = FriendIcon(buddy)
         self.add_item(icon)
+        self.nav_queue.append(icon)
         icon.show()
 
         self._buddies[buddy.props.key] = icon
@@ -71,10 +75,12 @@ class FriendsTray(VTray):
 
         self.remove_item(self._buddies[buddy.props.key])
         del self._buddies[buddy.props.key]
+        del self.nav_queue[self.nav_queue.index(self.buddies[buddy.props.key])]
 
     def clear(self):
         for item in self.get_children():
             self.remove_item(item)
+            del self.nav_queue[self.nav_queue.index(item)]
             item.destroy()
         self._buddies = {}
 
diff --git a/src/jarabe/frame/navigable.py b/src/jarabe/frame/navigable.py
new file mode 100644
index 0000000..32b78cd
--- /dev/null
+++ b/src/jarabe/frame/navigable.py
@@ -0,0 +1,35 @@
+class Navigable:
+    def __init__(self):
+        self.nav_queue = []
+        self.nav_pos = 0
+
+    def start_navigation(self):
+        self.nav_pos = -1
+        return self.navigation_right()
+
+    def navigate_from_end(self):
+        self.nav_pos = len(self.nav_queue)
+        return self.navigation_left()
+
+    def navigate(self):
+        button = self.nav_queue[self.nav_pos]
+        if button.get_palette() is None:
+            button.create_palette()
+        button.get_palette().popup()
+        size = len(self.nav_queue) - 1
+        if size == 0:
+            return 2
+        elif self.nav_pos == 0:
+            return -1
+        elif size > self.nav_pos:
+            return 0
+        elif size == self.nav_pos:
+            return 1
+
+    def navigation_right(self):
+        self.nav_pos += 1
+        return self.navigate()
+
+    def navigation_left(self):
+        self.nav_pos -= 1
+        return self.navigate()
diff --git a/src/jarabe/frame/zoomtoolbar.py b/src/jarabe/frame/zoomtoolbar.py
index 0c940f7..5f7fcc1 100644
--- a/src/jarabe/frame/zoomtoolbar.py
+++ b/src/jarabe/frame/zoomtoolbar.py
@@ -27,10 +27,11 @@ from sugar3.graphics.palette import Palette
 from sugar3.graphics.radiotoolbutton import RadioToolButton
 
 from jarabe.frame.frameinvoker import FrameWidgetInvoker
+from jarabe.frame.navigable import Navigable
 from jarabe.model import shell
 
 
-class ZoomToolbar(Gtk.Toolbar):
+class ZoomToolbar(Gtk.Toolbar, Navigable):
     __gsignals__ = {
         'level-clicked': (GObject.SignalFlags.RUN_FIRST, None,
                           ([]))
@@ -38,6 +39,7 @@ class ZoomToolbar(Gtk.Toolbar):
 
     def __init__(self):
         Gtk.Toolbar.__init__(self)
+        Navigable.__init__(self)
 
         # we shouldn't be mirrored in RTL locales
         self.set_direction(Gtk.TextDirection.LTR)
@@ -63,6 +65,8 @@ class ZoomToolbar(Gtk.Toolbar):
                              _('F4'),
                              shell.ShellModel.ZOOM_ACTIVITY)
 
+        self.nav_queue = [self._mesh_button, self._groups_button,
+                          self._home_button, self._activity_button]
         shell_model = shell.get_model()
         self._set_zoom_level(shell_model.zoom_level)
         shell_model.zoom_level_changed.connect(self.__zoom_level_changed_cb)
diff --git a/src/jarabe/view/keyhandler.py b/src/jarabe/view/keyhandler.py
index 1a79906..5bb9161 100644
--- a/src/jarabe/view/keyhandler.py
+++ b/src/jarabe/view/keyhandler.py
@@ -44,6 +44,8 @@ _actions_table = {
     'F4': 'zoom_activity',
     'F5': 'open_search',
     'F6': 'frame',
+    'Right': 'frame_right',
+    'Left': 'frame_left',
     'XF86AudioMute': 'volume_mute',
     'F11': 'volume_down',
     'XF86AudioLowerVolume': 'volume_down',
@@ -157,6 +159,12 @@ class KeyHandler(object):
     def handle_frame(self, event_time):
         self._frame.notify_key_press()
 
+    def handle_frame_right(self, event_time):
+        self._frame.notify_right_press()
+
+    def handle_frame_left(self, event_time):
+        self._frame.notify_left_press()
+
     def handle_logout(self, event_time):
         if "SUGAR_DEVELOPER" in os.environ:
             session.get_session_manager().logout()
-- 
1.7.9.5

